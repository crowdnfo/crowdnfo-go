name: Create Release on Tag

on:
    push:
        tags:
            - "v*.*.*"

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0  # Fetch all history for all branches and tags
                tags: true      # Ensure all tags are fetched

            - name: Get previous tag
              id: prev_tag
              run: |
                  TAGS=($(git tag --sort=-creatordate))
                  if [ "${#TAGS[@]}" -lt 2 ]; then
                    echo "prev_tag=" >> $GITHUB_OUTPUT
                  else
                    echo "prev_tag=${TAGS[1]}" >> $GITHUB_OUTPUT
                  fi

            - name: Generate release notes (Fix and Feat)
              id: notes
              run: |
                  if [ -z "${{ steps.prev_tag.outputs.prev_tag }}" ]; then
                    RANGE=""
                  else
                    RANGE="${{ steps.prev_tag.outputs.prev_tag }}..HEAD"
                  fi
                  NOTES=$(git log $RANGE --pretty=format:"%s" | grep -E '^(Fix:|Feat:)' || true)
                  echo "release_notes<<EOF" >> $GITHUB_OUTPUT
                  echo "$NOTES" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: Debug git log output
              run: |
                echo "---- git log output ----"
                git log $RANGE --pretty=format:"%s"
                echo "---- filtered output ----"
                git log $RANGE --pretty=format:"%s" | grep -E '^(Fix:|Feat:)' || true

            - name: Debug release notes output
              run: |
                echo "---- release notes ----"
                echo "${{ steps.notes.outputs.release_notes }}"


            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  body: ${{ steps.notes.outputs.release_notes }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
